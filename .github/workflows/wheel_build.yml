name: Build Python wheel

on:
  pull_request:
  push:
    branches: ['master']
  workflow_call:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 100
          fetch-tags: true

      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - uses: actions/cache@v4
        id: cached-poetry
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}

      - uses: snok/install-poetry@v1
        if: steps.cached-poetry.outputs.cache-hit != 'true'

      - name: Install Python dependencies
        run: poetry install --no-interaction

      - name: Check formatting with black
        run: poetry run black --check .

      - name: Lint with flake8
        run: poetry run flake8

      - name: Lint with pylint
        run: poetry run pylint acme_bot/

      - name: Run tests with pytest
        run: poetry run pytest test/

      - name: Build Python wheel
        run: poetry build --no-interaction

      - name: Generate remote API schema
        shell: bash
        run: poetry run docs/gen/remote_api_schema.py >remote_api.json

      - uses: actions/upload-artifact@v5
        with:
          name: python-wheel
          path: |
            dist/*.whl
            remote_api.json
